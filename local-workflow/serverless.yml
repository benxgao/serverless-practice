service: local-workflow

frameworkVersion: '2'

plugins:
  - serverless-dotenv-plugin
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  # stage: ${opt:stage, 'production'}
  stage: ${env:STAGE}
  apiGateway:
    minimumCompressionSize: 1024
  environment: #Global variables
    ${file(configs/${self:provider.stage}.yml)}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - 'Fn::GetAtt': [NotesTable, Arn]

custom:
  # stage: ${opt:stage, self:provider.stage}

  # tableName: ${self:custom.stage}-notes
  dotenv:
    basePath: ./configs/
    logging: false
    # path: path/to/my/.env (default ./.env)
    # include:
      # - AUTH0_CLIENT_ID
      # - AUTH0_CLIENT_SECRET
    # exclude:
      # - NODE_ENV
  webpack:
    webpackConfig: './webpack.config.js'
    includeModules: true
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello
  create:
    handler: todos/create.create
    events:
      - http:
          path: notes
          method: post
          integration: lambda
          cors: true
resources:
  - ${file(resources/api-gateway-errors.yml)}
  - ${file(resources/dynamodb-table.yml)}
